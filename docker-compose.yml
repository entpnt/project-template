services:
  api:
    image: ${PROJECT_NAME:-project-flow}-api:${ENV:-dev}
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - FLASK_ENV=${FLASK_ENV:-development}
    container_name: ${PROJECT_NAME:-project-flow}-api
    ports:
      - "${APP_PORT:-5000}:5000"
    env_file:
      - .env
    environment:
      - MONGO_URI=mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongodb:27017/${MONGO_DB}?authSource=admin
      - SECRET_KEY=${SECRET_KEY}
      - API_KEY=${API_KEY}
      - FLASK_ENV=${FLASK_ENV:-development}
    depends_on:
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - app-network

  mongodb:
    image: mongo:6
    container_name: ${PROJECT_NAME:-project-flow}-mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER:-app_user}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD:-app_pass}
      - MONGO_INITDB_DATABASE=${MONGO_DB:-project_db}
      - API_KEY=${API_KEY}
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "${MONGO_PORT:-27017}:27017"
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/admin --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
    restart: unless-stopped
    networks:
      - app-network

volumes:
  mongodb_data:
    name: ${PROJECT_NAME:-project-flow}-mongodb-data

networks:
  app-network:
    name: ${PROJECT_NAME:-project-flow}-network
    driver: bridge